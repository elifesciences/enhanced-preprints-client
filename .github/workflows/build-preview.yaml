name: Preview

on:
  pull_request:
    types: [labeled, synchronize, opened, reopened]

jobs:
  create-preview-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: create client deployment
        id: create-client-deployment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            --method POST \
            /repos/elifesciences/enhanced-preprints-client/deployments \
            -f ref='${{ github.head_ref }}' \
            -f environment="preview-${{ github.event.number }}" \
            -f required_contexts[] \
            -F transient_environment=true \
            -F auto_merge=false \
            -f description="Preview deployment for PR ${{ github.event.number }}" > deployment_data
          echo "statuses_url=$(cat deployment_data | jq -r .statuses_url)" >> $GITHUB_OUTPUT
      - name: create storybook deployment
        id: create-storybook-deployment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            --method POST \
            /repos/elifesciences/enhanced-preprints-client/deployments \
            -f ref='${{ github.head_ref }}' \
            -f environment="storybook-preview-${{ github.event.number }}" \
            -f required_contexts[] \
            -F transient_environment=true \
            -F auto_merge=false \
            -f description="Preview deployment for PR ${{ github.event.number }}" > deployment_data
          cat deployment_data
          echo "statuses_url=$(cat deployment_data | jq -r .statuses_url)" >> $GITHUB_OUTPUT

  build-preview-image:
    runs-on: ubuntu-latest
    needs: create-preview-deployment
    if: ${{ contains(github.event.pull_request.labels.*.name, 'preview') }}
    env:
      CLIENT_IMAGE_REPO: ghcr.io/elifesciences/enhanced-preprints-client
      STORYBOOK_IMAGE_REPO: ghcr.io/elifesciences/enhanced-preprints-storybook
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and load preview image
        uses: docker/build-push-action@v3
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: prod
          load: true
          tags: |
            ${{ env.CLIENT_IMAGE_REPO }}:preview-${{ github.event.number }}
      - name: run test
        run: docker run ${{ env.CLIENT_IMAGE_REPO }}:preview-${{ github.event.number }} yarn test --ci --watchAll=false
      - name: run lint
        run: docker run ${{ env.CLIENT_IMAGE_REPO }}:preview-${{ github.event.number }} yarn lint
      - name: run lint-sass
        run: docker run ${{ env.CLIENT_IMAGE_REPO }}:preview-${{ github.event.number }} yarn lint-sass
      - name: push preview image
        uses: docker/build-push-action@v3
        with:
          context: .
          target: prod
          push: true
          tags: |
            ${{ env.CLIENT_IMAGE_REPO }}:preview-${{ github.event.number }}
      - name: Build and push preview storybook image
        uses: docker/build-push-action@v3
        with:
          context: .
          target: storybook
          push: true
          tags: |
            ${{ env.STORYBOOK_IMAGE_REPO }}:preview-${{ github.event.number }}
      - name: Update deployments on build success
        if: success()
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          client_deployment_status_url="$(gh api '/repos/elifesciences/enhanced-preprints-client/deployments?environment=preview-${{ github.event.number }}&sha=${{ github.event.pull_request.head.sha }}' | jq -r '.[].statuses_url')"
          storybook_deployment_status_url="$(gh api '/repos/elifesciences/enhanced-preprints-client/deployments?environment=storybook-preview-${{ github.event.number }}&sha=${{ github.event.pull_request.head.sha }}' | jq -r '.[].statuses_url')"
          gh api \
            --method POST \
            $client_deployment_status_url \
            -f state=queued \
            -f description="Preview image built, waiting for deployment for PR ${{ github.event.number }}"
          gh api \
            --method POST \
            $storybook_deployment_status_url \
            -f state=queued \
            -f description="Preview image built, waiting for deployment for PR ${{ github.event.number }}"
      - name: Update deployments on failure
        if: failure()
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          client_deployment_status_url="$(gh api '/repos/elifesciences/enhanced-preprints-client/deployments?environment=preview-${{ github.event.number }}&sha=${{ github.event.pull_request.head.sha }}' | jq -r '.[].statuses_url')"
          storybook_deployment_status_url="$(gh api '/repos/elifesciences/enhanced-preprints-client/deployments?environment=storybook-preview-${{ github.event.number }}&sha=${{ github.event.pull_request.head.sha }}' | jq -r '.[].statuses_url')"
          gh api \
            --method POST \
            $client_deployment_status_url \
            -f state=failure \
            -f description="Preview image failed to build for PR ${{ github.event.number }}"
          gh api \
            --method POST \
            $storybook_deployment_status_url \
            -f state=failure \
            -f description="Preview image failed to build for PR ${{ github.event.number }}"
