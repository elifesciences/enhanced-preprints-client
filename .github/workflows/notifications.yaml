name: preview-notifications
on:
  repository_dispatch:
    types: [Kustomization/*.epp--previews]

jobs:
  notification-tests:
    runs-on: ubuntu-latest
    steps:
    - name: debug
      run: echo "client_payload = ${{toJSON(github.event.client_payload)}}"
    - name: Get deployments details
      id: pr_details
      env:
        GH_TOKEN: ${{ github.token }}
        PR_ID: ${{ github.event.client_payload.github_pr }}
        PR_SHA: ${{ github.event.client_payload.github_sha }}
        PR_HEAD_REF: ${{ github.event.client_payload.github_head_ref }}
      run: |
        gh api "/repos/elifesciences/enhanced-preprints-client/deployments?environment=preview-${PR_ID}&sha=${PR_SHA}&ref=${PR_HEAD_REF}" > client_deployment_details
        echo "Client Deployment found"
        cat client_deployment_details
        echo ""
        gh api "/repos/elifesciences/enhanced-preprints-client/deployments?environment=storybook-preview-${PR_ID}&sha=${PR_SHA}&ref=${PR_HEAD_REF}" > storybook_deployment_details
        echo "Storybook Deployment found"
        cat storybook_deployment_details

        echo "client_deployment_status_url=$(cat client_deployment_details | jq -r '.[].statuses_url')" | tee -a $GITHUB_OUTPUT
        echo "storybook_deployment_status_url=$(cat storybook_deployment_details | jq -r '.[].statuses_url')" | tee -a $GITHUB_OUTPUT
    - name: Update client deployment status
      if: steps.pr_details.outputs.client_deployment_status_url != '' && (contains(github.event.client_payload.message, '/epp-client created') || contains(github.event.client_payload.message, '/epp-client configured'))
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "client was created for PR ${{ steps.pr_details.outputs.pr_id }}"
        gh api \
          --method POST \
          ${{ steps.pr_details.outputs.client_deployment_status_url }} \
          -f state=in_progress
        echo "waiting for new environment to come online before posting an Env URL"...
        timeout 1800 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' https://pr-${{ steps.pr_details.outputs.pr_id }}--epp.elifesciences.org/)" != "200" ]]; do sleep 5; done' || false
        gh api \
          --method POST \
          ${{ steps.pr_details.outputs.client_deployment_status_url }} \
          -f state=success \
          -f environment_url='https://pr-${{ steps.pr_details.outputs.pr_id }}--epp.elifesciences.org/' \
          -f description="Preview deployed for PR ${{ steps.pr_details.outputs.pr_id }}"
    - name: Update storybook deployment status
      if: steps.pr_details.outputs.storybook_deployment_status_url != '' && (contains(github.event.client_payload.message, '/epp-storybook created') || contains(github.event.client_payload.message, '/epp-storybook configured'))
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "storybook was created for PR ${{ steps.pr_details.outputs.pr_id }}"
        gh api \
          --method POST \
          ${{ steps.pr_details.outputs.storybook_deployment_status_url }} \
          -f state=in_progress
        echo "waiting for new environment to come online before posting an Env URL"...
        timeout 1800 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' https://pr-${{ steps.pr_details.outputs.pr_id }}--epp-storybook.elifesciences.org/)" != "200" ]]; do sleep 5; done' || false
        gh api \
          --method POST \
          ${{ steps.pr_details.outputs.storybook_deployment_status_url }} \
          -f state=success \
          -f environment_url='https://pr-${{ steps.pr_details.outputs.pr_id }}--epp-storybook.elifesciences.org/' \
          -f description="Preview deployed for PR ${{ steps.pr_details.outputs.pr_id }}"
    - name: remove client deployment
      if: steps.pr_details.outputs.client_deployment_status_url != '' && contains(github.event.client_payload.message, '/epp-client deleted')
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "client was removed for PR ${{ steps.pr_details.outputs.pr_id }}"
        gh api \
          --method POST \
          ${{ steps.pr_details.outputs.client_deployment_status_url }} \
          -f state=inactive \
          -f environment_url='https://pr-${{ steps.pr_details.outputs.pr_id }}--epp.elifesciences.org/' \
          -f description="Preview deployed for PR ${{ steps.pr_details.outputs.pr_id }}"

        # Delete deployments
        # gh api "/repos/elifesciences/enhanced-preprints-client/deployments?environment=preview-${{ steps.pr_details.outputs.pr_id }}" | jq -c '.[]' | while read -r deployment
        # do
        #   gh api --method DELETE $(echo $deployment | jq -r '.url');
        # done
    - name: remove storybook deployment
      if: steps.pr_details.outputs.storybook_deployment_status_url != '' && contains(github.event.client_payload.message, '/epp-storybook deleted')
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "storybook was removed for PR ${{ steps.pr_details.outputs.pr_id }}"
        gh api \
          --method POST \
          ${{ steps.pr_details.outputs.storybook_deployment_status_url }} \
          -f state=inactive \
          -f environment_url='https://pr-${{ steps.pr_details.outputs.pr_id }}--epp-storybook.elifesciences.org/' \
          -f description="Preview deployed for PR ${{ steps.pr_details.outputs.pr_id }}"

        # Delete deployment
        # gh api "/repos/elifesciences/enhanced-preprints-client/deployments?environment=storybook-preview-${{ steps.pr_details.outputs.pr_id }}" | jq -c '.[]' | while read -r deployment
        # do
        #   gh api --method DELETE $(echo $deployment | jq -r '.url');
        # done
