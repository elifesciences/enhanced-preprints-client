name: preview-notifications
on:
  repository_dispatch:
    types: [Kustomization/*.epp--previews]

jobs:
  notification-tests:
    runs-on: ubuntu-latest
    steps:
    - name: debug
      run: echo "client_payload = ${{toJSON(github.event.client_payload)}}"
    - name: Get Pull request details
      id: pr_details
      env:
        GH_TOKEN: ${{ github.token }}
        PR_ID: ${{ github.event.client_payload.involvedObject.name }}
      run: |
        pr_id=${PR_ID:13}
        echo "pr_id=$pr_id" >> $GITHUB_OUTPUT
        gh pr view --repo elifesciences/enhanced-preprints-client $pr_id --json headRefName,headRefOid > pr_details
        cat pr_details
        pr_branch=$( cat pr_details | jq -r .headRefName )
        pr_ref=$( cat pr_details | jq -r .headRefOid )
        echo "pr_branch=$pr_branch" >> $GITHUB_OUTPUT
        echo "pr_ref=$pr_ref" >> $GITHUB_OUTPUT
        echo "client_deployment_status_url=$(gh api "/repos/elifesciences/enhanced-preprints-client/deployments?environment=preview-$pr_id&sha=$pr_ref" | jq -r '.[].statuses_url')" >> $GITHUB_OUTPUT
        echo "storybook_deployment_status_url=$(gh api "/repos/elifesciences/enhanced-preprints-client/deployments?environment=storybook-preview-$pr_id&sha=$pr_ref" | jq -r '.[].statuses_url')" >> $GITHUB_OUTPUT
    - name: Update client deployment status
      if: contains(github.event.client_payload.message, '/epp-client created') || contains(github.event.client_payload.message, '/epp-client configured')
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "client was created for PR ${{ steps.pr_details.outputs.pr_id }}"
        gh api \
          --method POST \
          ${{ steps.pr_details.outputs.client_deployment_status_url }} \
          -f state=success \
          -f environment_url='https://pr-${{ steps.pr_details.outputs.pr_id }}--epp.elifesciences.org/' \
          -f description="Preview deployed for PR ${{ steps.pr_details.outputs.pr_id }}"
    - name: Update storybook deployment status
      if: contains(github.event.client_payload.message, '/epp-storybook created') || contains(github.event.client_payload.message, '/epp-storybook configured')
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "storybook was created for PR ${{ steps.pr_details.outputs.pr_id }}"
        gh api \
          --method POST \
          ${{ steps.pr_details.outputs.storybook_deployment_status_url }} \
          -f state=success \
          -f environment_url='https://pr-${{ steps.pr_details.outputs.pr_id }}--epp-storybook.elifesciences.org/' \
          -f description="Preview deployed for PR ${{ steps.pr_details.outputs.pr_id }}"
    - name: remove client deployment
      if: contains(github.event.client_payload.message, '/epp-client deleted')
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "client was removed for PR ${{ steps.pr_details.outputs.pr_id }}"
        gh api \
          --method POST \
          ${{ steps.pr_details.outputs.client_deployment_status_url }} \
          -f state=inactive \
          -f environment_url='https://pr-${{ steps.pr_details.outputs.pr_id }}--epp.elifesciences.org/' \
          -f description="Preview deployed for PR ${{ steps.pr_details.outputs.pr_id }}"

        # Delete deployments
        gh api "/repos/elifesciences/enhanced-preprints-client/deployments?environment=preview-${{ steps.pr_details.outputs.pr_id }}" | jq -c '.[]' | while read -r deployment
        do
          gh api --method DELETE $(echo $deployment | jq '.url');
        done
    - name: remove storybook deployment
      if: contains(github.event.client_payload.message, '/epp-storybook deleted')
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "storybook was removed for PR ${{ steps.pr_details.outputs.pr_id }}"
        gh api \
          --method POST \
          ${{ steps.pr_details.outputs.storybook_deployment_status_url }} \
          -f state=inactive \
          -f environment_url='https://pr-${{ steps.pr_details.outputs.pr_id }}--epp-storybook.elifesciences.org/' \
          -f description="Preview deployed for PR ${{ steps.pr_details.outputs.pr_id }}"

        # Delete deployment
        gh api "/repos/elifesciences/enhanced-preprints-client/deployments?environment=storybook-preview-${{ steps.pr_details.outputs.pr_id }}" | jq -c '.[]' | while read -r deployment
        do
          gh api --method DELETE $(echo $deployment | jq '.url');
        done
