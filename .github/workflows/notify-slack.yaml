name: Send Slack build notification

on:
  workflow_call:
    inputs:
      run_id:
        required: true
        type: string
      commit_message:
        required: true
        type: string
      commit_id:
        required: true
        type: string
      commit_url:
        required: true
        type: string
      commit_author:
        required: true
        type: string
      diff_url:
        required: true
        type: string
      build_url:
        required: true
        type: string
      client_image_tag:
        type: string
      storybook_image_tag:
        type: string


jobs:
  notify-build-result:
    runs-on: ubuntu-latest
    steps:
      - name: debug inputs
        run: echo ${{inputs.run_id}}
      - name: debug workflow data inputs
        run: gh run view -R elifesciences/enhanced-preprints-client 8556339843 --json jobs | jq '[.jobs[]|select(.name|contains("notify-build-result")|not)]|[.[]|{type: "mrkdwn", text: ((if .conclusion then (if .conclusion == "success" then ":white_check_mark:" else ":x:" end) else ":white_circle:" end)+" "+.name)}]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Gather JSON data
        run: echo JOB_JSON=$(gh run view -R elifesciences/enhanced-preprints-client 8556339843 --json jobs | jq '[.jobs[]|select(.name|contains("notify-build-result")|not)]|[.[]|{type: "mrkdwn", text: ((if .conclusion then (if .conclusion == "success" then ":white_check_mark:" else ":x:" end) else ":white_circle:" end)+" "+.name)}]' ) >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Notify Slack build final message
    #   uses: slackapi/slack-github-action@v1.25.0
    #   env:
    #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_EPP_GITHUB_BOT_TOKEN }}
    #   with:
    #     channel-id: C06FPSVJPUH
    #     update-ts: ${{ needs['notify-start'].outputs.ts }}
    #     payload: |
      - name: Debug Slack payload
        run:  echo $payload
        env:
          payload: |
            {
              "text": "EPP Client CI: ${{
                (!needs.test.result || !needs.test-integration.result) &&
                  'testing... :sonic:'
                || ((needs.test.result != 'success' || needs.test-integration.result  != 'success') &&
                  'tests failed'
                || (!needs.build-and-push.result &&
                  'building... :sonic:'
                || (needs.build-and-push.result != 'success' &&
                  'building failed'
                || 'success'
                )))
              }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "EPP Client CI: ${{
                      (!needs.test.result || !needs.test-integration.result) &&
                        'testing... :sonic:'
                      || ((needs.test.result != 'success' || needs.test-integration.result  != 'success') &&
                        'tests failed'
                      || (!needs.build-and-push.result &&
                        'building... :sonic:'
                      || (needs.build-and-push.result != 'success' &&
                        'building failed'
                      || 'success'
                      )))
                    }}",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJSON(inputs.commit_message) }}
                  },
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "commit: <${{ inputs.commit_url }}|${{ inputs.commit_id }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "author: ${{ inputs.commit_author }}"
                    }
                  ]
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Stages:*"
                  },
                  "fields": ${{ env.JOB_JSON }}
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "<${{ inputs.build_url }}|View build>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "<${{ inputs.diff_url }}|View diff>"
                    }
                  ]
                }
              ]
            }
