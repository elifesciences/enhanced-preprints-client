name: CI Pipeline

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvm
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Use bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.3
      - name: bun install
        run: bun install
      - name: Lint
        run: bun run lint
      - name: Lint SASS
        run: bun run lint-sass
      - name: Unit Test
        run: bun run test
      - name: Production build
        run: bun run build
      - name: Install operating system dependencies
        run: |
          bun run playwright install
          bun run playwright install-deps
      - name: Bring up browser test stack
        run: docker compose -f docker-compose.browsertest.yaml up -d --wait
      - name: Debug bring up browser test stack
        if: failure()
        run: docker compose logs app
      - name: Browser Tests
        run: bun test:browser
      - name: Take down browser test stack
        run: docker compose -f docker-compose.browsertest.yaml down
  test-multiplatform-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build client image
        run: |
          docker buildx build -t test:test --platform linux/amd64,linux/arm64 --target prod .
      - name: Build storybook image
        run: |
          docker buildx build -t test:test --platform linux/amd64,linux/arm64 --target storybook .
  build-and-push:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push client image
        run: IMAGE_REPO_PREFIX=ghcr.io/elifesciences/enhanced-preprints- make build-prod-and-push
      - name: Build and push storybook image
        run: IMAGE_REPO_PREFIX=ghcr.io/elifesciences/enhanced-preprints- make build-storybook-and-push
