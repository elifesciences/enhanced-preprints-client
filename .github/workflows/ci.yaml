name: CI Pipeline

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvm
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
          cache: yarn
      - name: yarn install
        run: yarn
      - name: Lint
        run: yarn lint
      - name: Lint SASS
        run: yarn lint-sass
      - name: Unit Test
        run: yarn test
      - name: Production build
        run: yarn build
      - name: Install operating system dependencies
        run: |
          yarn playwright install
          yarn playwright install-deps
      - name: Bring up browser test stack
        run: docker compose -f docker-compose.browsertest.yaml up -d --wait
      - name: Debug bring up browser test stack
        if: failure()
        run: docker compose logs app
      - name: Browser Tests
        run: yarn test:browser
      - name: Take down browser test stack
        run: docker compose -f docker-compose.browsertest.yaml down
  build-and-push:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get current date
        id: date
        run: echo "date=$(date --utc +%Y%m%d.%H%M)" >> $GITHUB_OUTPUT
      - name: Get sha with 8 chars long
        id: commit_sha
        run: echo "commit_sha=${GITHUB_SHA:0:8}" >> $GITHUB_OUTPUT
      - name: Build and push client image
        uses: docker/build-push-action@v4
        with:
          push: true
          load: false
          platforms: linux/amd64,linux/arm64
          target: prod
          tags: |
            ghcr.io/elifesciences/enhanced-preprints-client:latest
            ghcr.io/elifesciences/enhanced-preprints-client:${{ github.sha }}
            ghcr.io/elifesciences/enhanced-preprints-client:master-${{ steps.commit_sha.outputs.commit_sha }}-${{ steps.date.outputs.date }}
      - name: Build and push storybook image
        uses: docker/build-push-action@v4
        with:
          push: true
          load: false
          platforms: linux/amd64,linux/arm64
          target: storybook
          tags: |
            ghcr.io/elifesciences/enhanced-preprints-storybook:latest
            ghcr.io/elifesciences/enhanced-preprints-storybook:${{ github.sha }}
            ghcr.io/elifesciences/enhanced-preprints-storybook:master-${{ steps.commit_sha.outputs.commit_sha }}-${{ steps.date.outputs.date }}
