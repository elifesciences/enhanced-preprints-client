version: '3.4'
services:
  # Dependant services

  ## Image Server
  image-server:
    image: ghcr.io/elifesciences/epp-image-server:master-cc3360dd-20251013.1308@sha256:ceed655c2c46e96f26c843259dc7738cc9820404a0dacdcb6e7197389464cbe2
    depends_on:
      createbucket:
        condition: service_completed_successfully
    environment:
      - SOURCE_STATIC=S3Source
      - S3SOURCE_ENDPOINT=http://minio:9000/
      - S3SOURCE_ACCESS_KEY_ID=minio
      - S3SOURCE_SECRET_KEY=miniotest
      - S3SOURCE_BASICLOOKUPSTRATEGY_PATH_PREFIX=automation/
      - S3SOURCE_BASICLOOKUPSTRATEGY_BUCKET_NAME=eppdata
    ports:
      - "8182:8182"
    volumes:
      - ./data:/opt/epp/data
    healthcheck:
      test: curl http://image-server:8182/
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s

  ## Minio
  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z@sha256:14cea493d9a34af32f524e538b8346cf79f3321eff8e708c1e2960462bd8936e
    healthcheck:
      test: curl http://minio:9000/minio/health/live
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s
    ports:
      - "9100:9000"
      - "9101:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniotest
    command: server --console-address ":9001" /data

  # Create bucket and upload data
  createbucket:
    image: minio/mc:RELEASE.2025-08-13T08-35-41Z@sha256:a7fe349ef4bd8521fb8497f55c6042871b2ae640607cf99d9bede5e9bdf11727
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minio miniotest;
      /usr/bin/mc mb myminio/eppdata || true;
      /usr/bin/mc mirror /automation-data myminio/eppdata/automation;
      exit 0;
      "
    volumes:
      - ./data/automation:/automation-data

  ## EPP server mock
  wiremock:
    image: wiremock/wiremock:3.12.1-1@sha256:be850ea239193d9497b264115e7071f1f2605bbff05b41f1fa22799904b2e019
    ports:
      - 3000:3000
    healthcheck:
      test: curl http://wiremock:3000/__admin/health
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    command:
      - --local-response-templating
      - --port
      - "3000"
    volumes:
      - ./wiremock/mappings:/home/wiremock/mappings
      - ./wiremock/files:/home/wiremock/__files


  ## Main app server
  app:
    build:
      context: .
      target: dev
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'apk add curl; curl -X POST http://app:3000/api/ping'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s
    environment:
      NEXT_PUBLIC_SITE_NAME: ${NEXT_PUBLIC_SITE_NAME:-elife}
      API_SERVER: ${API_SERVER:-http://wiremock:3000}
      IIIF_SERVER: ${IIIF_SERVER:-http://image-server:8182/iiif}
      NEXT_PUBLIC_IMAGE_SERVER: /iiif
      NEXT_PUBLIC_FILES_API_PATH: /api/files
      NEXT_PUBLIC_DISABLE_TERMS: ${NEXT_PUBLIC_DISABLE_TERMS:-false}

    ports:
      - 3001:3000
      - 9229:9229
    volumes:
      - ./:/opt/epp-client/
      - node_modules:/opt/epp-client/node_modules

  # Expose API and client via proxy
  nginx:
    image: nginx:latest
    depends_on:
      wiremock:
        condition: service_healthy
      app:
        condition: service_healthy
    ports:
      - 8080:80
    volumes:
      - ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf

volumes:
  data:
  node_modules:
  minio_storage:
