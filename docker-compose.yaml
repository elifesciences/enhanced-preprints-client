services:
  # services for API
  api:
    image: ghcr.io/elifesciences/enhanced-preprints:master-41031820-20220915.1629
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'apk add curl; curl http://api:3000/'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s
  api-import-data:
    image: ghcr.io/elifesciences/enhanced-preprints:master-41031820-20220915.1629
    command: sh -c "apk add curl; curl -X POST http://api:3000/import"
    depends_on:
      api:
        condition: service_healthy

  # Main app server
  app:
    build:
      context: .
      target: dev
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'apk add curl; curl -X POST http://app:3000/'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s
    environment:
      API_SERVER: http://api:3000
    depends_on:
      api-import-data:
        condition: service_completed_successfully
    volumes:
    - ./:/opt/epp-client/
    - node_modules:/opt/epp-client/node_modules

  # storybook server
  storybook:
    profiles:
    - storybook
    build:
      context: .
      target: storybook
    ports:
    - "6006:6006"
    volumes:
    - ./:/opt/epp-client/
    - node_modules:/opt/epp-client/node_modules

  # expose API and client via proxy
  nginx:
    image: nginx:latest
    depends_on:
      api:
        condition: service_healthy
      app:
        condition: service_healthy
    ports:
    - 8080:80
    volumes:
    - ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf
volumes:
  node_modules:
