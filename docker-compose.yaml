services:
  # services for API
  api:
    image: ghcr.io/elifesciences/enhanced-preprints:master-07214ff1-20220922.0234
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'apk add curl; curl http://api:3000/'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s
    environment:
      REPO_TYPE: MongoDB
      REPO_CONNECTION: mongodb:27017
      REPO_USERNAME: admin
      REPO_PASSWORD: testtest
      IIIF_SERVER: http://localhost:8182

  api-import-data:
    image: alpine:latest
    command: sh -c "apk add curl; curl -X POST http://api:3000/import"
    depends_on:
      api:
        condition: service_healthy

  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: testtest
    volumes:
      - data:/home/couchdb/data

  mongo-express:
    image: mongo-express
    environment:
      - ME_CONFIG_OPTIONS_EDITORTHEME=dracula
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_USERNAME=admin
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=testtest
    depends_on:
      - mongodb
    ports:
      - "8081:8081"

  # Image Server
  image-server:
    image: ghcr.io/elifesciences/epp-image-server:master-4e289990-20220927.0408
    ports:
    - "8182:8182"
    volumes:
    - ./image-server/cantaloupe.properties:/opt/cantaloupe/cantaloupe.properties
    - ./data:/opt/epp/data

  # Main app server
  app:
    build:
      context: .
      target: dev
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'apk add curl; curl -X POST http://app:3000/'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s
    environment:
      API_SERVER: http://api:3000
    depends_on:
      api-import-data:
        condition: service_completed_successfully
    volumes:
    - ./:/opt/epp-client/
    - node_modules:/opt/epp-client/node_modules

  # storybook server
  storybook:
    profiles:
    - storybook
    build:
      context: .
      target: storybook
    ports:
    - "6006:6006"
    volumes:
    - ./:/opt/epp-client/
    - node_modules:/opt/epp-client/node_modules

  # expose API and client via proxy
  nginx:
    image: nginx:latest
    depends_on:
      api:
        condition: service_healthy
      app:
        condition: service_healthy
    ports:
    - 8080:80
    volumes:
    - ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf
volumes:
  data:
  node_modules:
